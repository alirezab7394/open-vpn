version: "3.8"

services:
  wireguard:
    image: linuxserver/wireguard:latest
    container_name: wireguard-server
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - SERVERURL=auto
      - SERVERPORT=51820
      - PEERS=10
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.8.0.0/24
      - ALLOWEDIPS=0.0.0.0/0
      - LOG_CONFS=true
    volumes:
      - ./config:/config
      - /lib/modules:/lib/modules:ro
    ports:
      - "51820:51820/udp"
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    depends_on:
      - wireguard-web
    networks:
      - wireguard-network

  wireguard-web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: wireguard-web-interface
    environment:
      - NODE_ENV=production
      - PORT=8080
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - SESSION_SECRET=your-super-secret-session-key-change-this-in-production
      - ALLOWED_ORIGINS=http://localhost:8080,https://your-domain.com
    volumes:
      - ./config:/etc/wireguard:ro
      - ./web/data:/app/data
      - /var/log:/var/log
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - redis
    networks:
      - wireguard-network

  redis:
    image: redis:7-alpine
    container_name: wireguard-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - wireguard-network

  nginx:
    image: nginx:alpine
    container_name: wireguard-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/html:/usr/share/nginx/html:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - wireguard-web
    restart: unless-stopped
    networks:
      - wireguard-network

  prometheus:
    image: prom/prometheus:latest
    container_name: wireguard-prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - wireguard-network

  grafana:
    image: grafana/grafana:latest
    container_name: wireguard-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - wireguard-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: wireguard-node-exporter
    command:
      - "--path.rootfs=/host"
    pid: host
    volumes:
      - "/:/host:ro,rslave"
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks:
      - wireguard-network

networks:
  wireguard-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
