version: "3.8"

services:
  # Outline Server
  outline-server:
    image: quay.io/outline/shadowbox:stable
    container_name: outline-server
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "443:443"
      - "9000:9000"
    volumes:
      - outline-data:/opt/outline
      - ./configs/outline-server.json:/opt/outline/server.json
    environment:
      - LOG_LEVEL=info
    networks:
      - outline-network

  # Outline Manager API
  outline-api:
    build: ./api
    container_name: outline-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - outline-data:/opt/outline
      - ./api:/app
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NODE_ENV=production
      - OUTLINE_SERVER_URL=http://outline-server:8080
      - OUTLINE_API_URL=http://localhost:8080
    depends_on:
      - outline-server
    networks:
      - outline-network

  # Web UI
  outline-ui:
    image: nginx:alpine
    container_name: outline-ui
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ui:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - outline-api
    networks:
      - outline-network

  # Redis for session management
  redis:
    image: redis:alpine
    container_name: outline-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - outline-network

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: outline-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    networks:
      - outline-network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: outline-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./configs/grafana-dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - outline-network

  # Watchtower for automatic updates
  watchtower:
    image: containrrr/watchtower
    container_name: outline-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 4 * * *
    networks:
      - outline-network

networks:
  outline-network:
    driver: bridge

volumes:
  outline-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
